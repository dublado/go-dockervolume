syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

package dockervolume;

message ActivateResponse {
  repeated string implements = 1;
}

message CreateRequest {
  string name = 1;
  map<string, string> opts = 2;
}

message CreateResponse {
  string err = 1;
}

message RemoveRequest {
  string name = 1;
}

message RemoveResponse {
  string err = 1;
}

message PathRequest {
  string name = 1;
}

message PathResponse {
  string mountpoint = 1;
  string err = 2;
}

message MountRequest {
  string name = 1;
}

message MountResponse {
  string mountpoint = 1;
  string err = 2;
}

message UnmountRequest {
  string name = 1;
}

message UnmountResponse {
  string err = 1;
}

service API {
  rpc Activate(google.protobuf.Empty) returns (ActivateResponse) {
    option (google.api.http) = {
      post: "/Plugin.Activate"
      body: "*"
    };
  }
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/VolumeDriver.Create"
      body: "*"
    };
  }
  rpc Remove(RemoveRequest) returns (RemoveResponse) {
    option (google.api.http) = {
      post: "/VolumeDriver.Remove"
      body: "*"
    };
  }
  rpc Path(PathRequest) returns (PathResponse) {
    option (google.api.http) = {
      post: "/VolumeDriver.Path"
      body: "*"
    };
  }
  rpc Mount(MountRequest) returns (MountResponse) {
    option (google.api.http) = {
      post: "/VolumeDriver.Mount"
      body: "*"
    };
  }
  rpc Unmount(UnmountRequest) returns (UnmountResponse) {
    option (google.api.http) = {
      post: "/VolumeDriver.Unmount"
      body: "*"
    };
  }
}
